name: Release
on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
jobs:
#  Build-Windows:
#    runs-on: ubuntu-latest
#    steps:
  Build-and-release-Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v-test
          release_name: Release test
          draft: false
          prerelease: false
      - name: install dependencies
        run: |
          sudo apt install unzip git gdb wget curl cmake libx11-dev libglu1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev zlib1g-dev libasound2-dev libgtk2.0-dev libgtk-3-dev libjack-jackd2-dev jq zstd libpulse-dev pkg-config
      - name: checkout repository source
        uses: actions/checkout@v4
      - name: get RACK SDK
        run: |
          cd ..
          wget https://vcvrack.com/downloads/Rack-SDK-latest-lin-x64.zip
          unzip Rack-SDK-latest-lin-x64.zip
          cd GL
          RACK_DIR=../test make dep && make dist
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: dist/*.vcvplugin
          asset_name: ${{ github.ref }}.vcvplugin
          asset_content_type: application/octet-stream

#  Build-Mac:
#    runs-on: ubuntu-latest
#    steps:

